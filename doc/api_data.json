[  {    "type": "post",    "url": "/filmes",    "title": "Cadastrar um novo filme",    "version": "1.0.0",    "name": "createFilme",    "group": "Filme",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Mensagem de sucesso.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "ID",            "description": "<p>O ID do filme criado.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"FilmeCriado\",\n  \"_id\": \"XXX\"\n}",          "type": "json"        }      ]    },    "filename": "./sources/filmes/filmes.controller.js",    "groupTitle": "Filme",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        },        {          "title": "Content-Tyoe:",          "content": "{\n  \"Content-Type\": \"application/json\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Body": [          {            "group": "Body",            "type": "String",            "optional": false,            "field": "nome",            "description": "<p>Nome do filme.</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "sinopse",            "description": "<p>Sinopse do filme.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "diretor",            "description": "<p>Nome do diretor.</p>"          },          {            "group": "Body",            "type": "String[]",            "optional": true,            "field": "elenco",            "description": "<p>Nome dos atores/atrizes. Aceito somente letras nos nomes.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "data_lancamento",            "description": "<p>Data do lançamento (ISO 8601).</p>"          },          {            "group": "Body",            "type": "Number",            "optional": true,            "field": "duracao",            "description": "<p>Duração do filme. Aceito somente números.</p>"          },          {            "group": "Body",            "type": "String[]",            "optional": true,            "field": "genero",            "description": "<p>Gêneros do filme. Aceito somente letras.</p>"          },          {            "group": "Body",            "type": "Number",            "optional": true,            "field": "rating",            "description": "<p>Avaliação do filme. Aceito somente números (Float).</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "pais",            "description": "<p>País do filme (ISO 3166 alfa-3).</p>"          }        ]      }    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ],        "Error 400 - Validação": [          {            "group": "Error 400 - Validação",            "optional": false,            "field": "param",            "description": "<p>Nome do parâmetro com erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": false,            "field": "msg",            "description": "<p>Descrição do erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": true,            "field": "value",            "description": "<p>Valor do parâmetro com erro.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        },        {          "title": "ErroValidação:",          "content": "HTTP/1.1 400 Bad Request\n[{\n  \"param\": \"rating\",\n  \"msg\": \"O rating precisa ser um número entre 0.0 e 10.0\",\n  \"value\": \"12.0\"\n}]\n\nHTTP/1.1 400 Bad Request\n[{\n  \"param\": \"nome\",\n  \"msg\": \"O nome é obrigatório\"\n}]",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/filmes/:id",    "title": "Apagar um filme",    "version": "1.0.0",    "name": "delFilme",    "group": "Filme",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID do filme.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Filme apagado.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"FilmeApagado\"\n}",          "type": "json"        }      ]    },    "filename": "./sources/filmes/filmes.controller.js",    "groupTitle": "Filme",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "IDInvalido",            "description": "<p>O ID informado é inválido.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ],        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "FilmeNaoEncontrado",            "description": "<p>O ID do filme não foi encontrado.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        },        {          "title": "FilmeNaoEncontrado:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"message\": \"FilmeNaoEncontrado\"\n}",          "type": "json"        },        {          "title": "IDInvalido:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"IDInvalido\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/filmes",    "title": "Recuperar as informações de todos os filmes cadastrados",    "version": "1.0.0",    "name": "getAllFilmes",    "group": "Filme",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n  \"_id\": \"XYZ\",\n  \"nome\": \"Titanic\",\n  \"sinopse\": \"84 anos mais tarde, uma mulher de 101 anos chamada Rose DeWitt Bukater conta a história...\",\n  \"diretor\": \"James Cameron\",\n  \"elenco\": [\"Leonardo DiCaprio\", \"Kate Winslet\", \"Billy Zane\", \"Kathy Bates\"],\n  \"data_lancamento\": \"1997-12-19\",\n  \"duracao\": \"194\",\n  \"genero\": [\"Drama\", \"Romance\"],\n  \"rating\": \"7.7\",\n  \"pais\": \"EUA\",\n  \"dt_criacao\": \"2017-01-01\",\n  \"dt_ult_at\": \"2017-01-02\"\n}]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>ID do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "nome",            "description": "<p>Nome do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "sinopse",            "description": "<p>Sinopse do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "diretor",            "description": "<p>Nome do diretor.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "elenco",            "description": "<p>Nome dos atores/atrizes.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data_lancamento",            "description": "<p>Data do lançamento (ISO 8601).</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "duracao",            "description": "<p>Duração do filme.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "genero",            "description": "<p>Gêneros do filme.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>Nota do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pais",            "description": "<p>Nome do país (ISO 3166 alfa-3).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dt_criacao",            "description": "<p>Data de criação (ISO 8601).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dt_ult_at",            "description": "<p>Data da última modificação (ISO 8601).</p>"          }        ]      }    },    "filename": "./sources/filmes/filmes.controller.js",    "groupTitle": "Filme",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/filmes/:id",    "title": "Recuperar as informações de um filme cadastrado",    "version": "1.0.0",    "name": "getOneFilme",    "group": "Filme",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID do filme.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"nome\": \"Titanic\",\n  \"sinopse\": \"84 anos mais tarde, uma mulher de 101 anos chamada Rose DeWitt Bukater conta a história...\",\n  \"diretor\": \"James Cameron\",\n  \"elenco\": [\"Leonardo DiCaprio\", \"Kate Winslet\", \"Billy Zane\", \"Kathy Bates\"],\n  \"data_lancamento\": \"1997-12-19\",\n  \"duracao\": \"194\",\n  \"genero\": [\"Drama\", \"Romance\"],\n  \"rating\": \"7.7\",\n  \"pais\": \"EUA\",\n  \"dt_criacao\": \"2017-01-01\",\n  \"dt_ult_at\": \"2017-01-02\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>ID do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "nome",            "description": "<p>Nome do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "sinopse",            "description": "<p>Sinopse do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "diretor",            "description": "<p>Nome do diretor.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "elenco",            "description": "<p>Nome dos atores/atrizes.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data_lancamento",            "description": "<p>Data do lançamento (ISO 8601).</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "duracao",            "description": "<p>Duração do filme.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "genero",            "description": "<p>Gêneros do filme.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>Nota do filme.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pais",            "description": "<p>Nome do país (ISO 3166 alfa-3).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dt_criacao",            "description": "<p>Data de criação (ISO 8601).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dt_ult_at",            "description": "<p>Data da última modificação (ISO 8601).</p>"          }        ]      }    },    "filename": "./sources/filmes/filmes.controller.js",    "groupTitle": "Filme",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "IDInvalido",            "description": "<p>O ID informado é inválido.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ],        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "FilmeNaoEncontrado",            "description": "<p>O ID do filme não foi encontrado.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        },        {          "title": "FilmeNaoEncontrado:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"message\": \"FilmeNaoEncontrado\"\n}",          "type": "json"        },        {          "title": "IDInvalido:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"IDInvalido\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/filmes/:id",    "title": "Alterar todas as informações de um filme",    "version": "1.0.0",    "description": "<p>Este método altera a entidade inteira, mas mantém o mesmo ID do filme.</p>",    "name": "updFullFilme",    "group": "Filme",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID do filme.</p>"          }        ],        "Body": [          {            "group": "Body",            "type": "String",            "optional": false,            "field": "nome",            "description": "<p>Nome do filme.</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "sinopse",            "description": "<p>Sinopse do filme.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "diretor",            "description": "<p>Nome do diretor.</p>"          },          {            "group": "Body",            "type": "String[]",            "optional": true,            "field": "elenco",            "description": "<p>Nome dos atores/atrizes. Aceito somente letras nos nomes.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "data_lancamento",            "description": "<p>Data do lançamento (ISO 8601).</p>"          },          {            "group": "Body",            "type": "Number",            "optional": true,            "field": "duracao",            "description": "<p>Duração do filme. Aceito somente números.</p>"          },          {            "group": "Body",            "type": "String[]",            "optional": true,            "field": "genero",            "description": "<p>Gêneros do filme. Aceito somente letras.</p>"          },          {            "group": "Body",            "type": "Number",            "optional": true,            "field": "rating",            "description": "<p>Avaliação do filme. Aceito somente números (Float).</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "pais",            "description": "<p>País do filme (ISO 3166 alfa-3).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Mensagem de sucesso.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"FilmeAlterado\"\n}",          "type": "json"        }      ]    },    "filename": "./sources/filmes/filmes.controller.js",    "groupTitle": "Filme",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        },        {          "title": "Content-Tyoe:",          "content": "{\n  \"Content-Type\": \"application/json\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "IDInvalido",            "description": "<p>O ID informado é inválido.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ],        "Error 400 - Validação": [          {            "group": "Error 400 - Validação",            "optional": false,            "field": "param",            "description": "<p>Nome do parâmetro com erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": false,            "field": "msg",            "description": "<p>Descrição do erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": true,            "field": "value",            "description": "<p>Valor do parâmetro com erro.</p>"          }        ],        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "FilmeNaoEncontrado",            "description": "<p>O ID do filme não foi encontrado.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        },        {          "title": "ErroValidação:",          "content": "HTTP/1.1 400 Bad Request\n[{\n  \"param\": \"rating\",\n  \"msg\": \"O rating precisa ser um número entre 0.0 e 10.0\",\n  \"value\": \"12.0\"\n}]\n\nHTTP/1.1 400 Bad Request\n[{\n  \"param\": \"nome\",\n  \"msg\": \"O nome é obrigatório\"\n}]",          "type": "json"        },        {          "title": "FilmeNaoEncontrado:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"message\": \"FilmeNaoEncontrado\"\n}",          "type": "json"        },        {          "title": "IDInvalido:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"IDInvalido\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/filmes/:id",    "title": "Alterar informações de um filmes",    "version": "1.0.0",    "description": "<p>Este método altera somente as propriedades da entidade que foram passadas no body e mantém o mesmo ID do filme.</p>",    "name": "updParcialFilme",    "group": "Filme",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID do filme.</p>"          }        ],        "Body": [          {            "group": "Body",            "type": "String",            "optional": false,            "field": "nome",            "description": "<p>Nome do filme.</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "sinopse",            "description": "<p>Sinopse do filme.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "diretor",            "description": "<p>Nome do diretor.</p>"          },          {            "group": "Body",            "type": "String[]",            "optional": true,            "field": "elenco",            "description": "<p>Nome dos atores/atrizes. Aceito somente letras nos nomes.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "data_lancamento",            "description": "<p>Data do lançamento (ISO 8601).</p>"          },          {            "group": "Body",            "type": "Number",            "optional": true,            "field": "duracao",            "description": "<p>Duração do filme. Aceito somente números.</p>"          },          {            "group": "Body",            "type": "String[]",            "optional": true,            "field": "genero",            "description": "<p>Gêneros do filme. Aceito somente letras.</p>"          },          {            "group": "Body",            "type": "Number",            "optional": true,            "field": "rating",            "description": "<p>Avaliação do filme. Aceito somente números (Float).</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "pais",            "description": "<p>País do filme (ISO 3166 alfa-3).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Mensagem de sucesso.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"FilmeAlterado\"\n}",          "type": "json"        }      ]    },    "filename": "./sources/filmes/filmes.controller.js",    "groupTitle": "Filme",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        },        {          "title": "Content-Tyoe:",          "content": "{\n  \"Content-Type\": \"application/json\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "IDInvalido",            "description": "<p>O ID informado é inválido.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ],        "Error 400 - Validação": [          {            "group": "Error 400 - Validação",            "optional": false,            "field": "param",            "description": "<p>Nome do parâmetro com erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": false,            "field": "msg",            "description": "<p>Descrição do erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": true,            "field": "value",            "description": "<p>Valor do parâmetro com erro.</p>"          }        ],        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "FilmeNaoEncontrado",            "description": "<p>O ID do filme não foi encontrado.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        },        {          "title": "ErroValidação:",          "content": "HTTP/1.1 400 Bad Request\n[{\n  \"param\": \"rating\",\n  \"msg\": \"O rating precisa ser um número entre 0.0 e 10.0\",\n  \"value\": \"12.0\"\n}]\n\nHTTP/1.1 400 Bad Request\n[{\n  \"param\": \"nome\",\n  \"msg\": \"O nome é obrigatório\"\n}]",          "type": "json"        },        {          "title": "FilmeNaoEncontrado:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"message\": \"FilmeNaoEncontrado\"\n}",          "type": "json"        },        {          "title": "IDInvalido:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"IDInvalido\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/usuarios/autenticar",    "title": "Autenticar o usuário para gerar o token de acesso.",    "version": "1.0.0",    "name": "authenticate",    "group": "Usuario",    "permission": [      {        "name": "Nenhuma"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Mensagem de sucesso.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token de acesso gerado para o usuário.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"UsuarioAutenticado\",\n  \"token\": \"efjaksfbkjafbakjfdsk.enenvjevhsbvshkvbk\",\n}",          "type": "json"        }      ]    },    "filename": "./sources/usuarios/usuarios.controller.js",    "groupTitle": "Usuario",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      },      "examples": [        {          "title": "Content-Tyoe:",          "content": "{\n  \"Content-Type\": \"application/json\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Body": [          {            "group": "Body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username do usuário.</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha do usuário.</p>"          },          {            "group": "Body",            "type": "String",            "optional": true,            "field": "expiresIn",            "description": "<p>Duração da validade do token. Formato: N[s|m|h]. Exemplo: 10s (10 segundos) ou 2h (2 horas). Se não informado, o default é 1h.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 400 - Validação": [          {            "group": "Error 400 - Validação",            "optional": false,            "field": "param",            "description": "<p>Nome do parâmetro com erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": false,            "field": "msg",            "description": "<p>Descrição do erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": true,            "field": "value",            "description": "<p>Valor do parâmetro com erro.</p>"          }        ]      },      "examples": [        {          "title": "ErroValidação:",          "content": "HTTP/1.1 400 Bad Request\n[{\n  \"param\": \"username\",\n  \"msg\": \"O username é obrigatório\"\n}]\n\nHTTP/1.1 400 Bad Request\n[{\n  \"param\": \"expiresIn\",\n  \"msg\": \"A expiração do token precisa estar no formato N[s|m|h]. Exemplo: 10s (10 segundos) ou 2h (2 horas)\",\n  \"value\": \"5p\"\n}]",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/usuarios",    "title": "Criar novo usuário",    "version": "1.0.0",    "name": "createUser",    "group": "Usuario",    "permission": [      {        "name": "Nenhuma"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Mensagem de sucesso.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "ID",            "description": "<p>O ID do usuário criado.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n  \"message\": \"UsuarioCriado\",\n  \"_id\": \"XPTO\"\n}]",          "type": "json"        }      ]    },    "filename": "./sources/usuarios/usuarios.controller.js",    "groupTitle": "Usuario",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      },      "examples": [        {          "title": "Content-Tyoe:",          "content": "{\n  \"Content-Type\": \"application/json\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Body": [          {            "group": "Body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username do usuário. Não pode conter espaço e caracter especial.</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha do usuário. Precisa conter uma letra maiúscula, um número e um caracter especial.</p>"          },          {            "group": "Body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail válido.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 400 - Validação": [          {            "group": "Error 400 - Validação",            "optional": false,            "field": "param",            "description": "<p>Nome do parâmetro com erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": false,            "field": "msg",            "description": "<p>Descrição do erro.</p>"          },          {            "group": "Error 400 - Validação",            "optional": true,            "field": "value",            "description": "<p>Valor do parâmetro com erro.</p>"          }        ]      },      "examples": [        {          "title": "ErroValidação:",          "content": "HTTP/1.1 400 Bad Request\n[{\n  \"param\": \"username\",\n  \"msg\": \"O username é obrigatório e não pode conter espaço e caracter especial\"\n}]\n\nHTTP/1.1 400 Bad Request\n[{\n  \"param\": \"email\",\n  \"msg\": \"O e-mail é obrigatório e precisa ser válido\",\n  \"value\": \"\"\n}]",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/usuarios/:id",    "title": "Apagar um usuário",    "version": "1.0.0",    "name": "del",    "group": "Usuario",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID do usuário.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Mensagem de sucesso.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"UsuarioApagado\"\n}",          "type": "json"        }      ]    },    "filename": "./sources/usuarios/usuarios.controller.js",    "groupTitle": "Usuario",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "IDInvalido",            "description": "<p>O ID informado é inválido.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ],        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "UsuarioNaoEncontrado",            "description": "<p>O ID do usuário não foi encontrado.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        },        {          "title": "UsuarioNaoEncontrado:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"message\": \"UsuarioNaoEncontrado\"\n}",          "type": "json"        },        {          "title": "IDInvalido:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"IDInvalido\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/usuarios",    "title": "Recuperar as informações de todos os usuários cadastrados",    "version": "1.0.0",    "name": "getAllUsuarios",    "group": "Usuario",    "permission": [      {        "name": "Usuários autenticados"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n  \"_id\": \"XPTO\",\n  \"username\": \"smithwill\",\n  \"password\": \"banksfamily\",\n  \"email\": \"thefreshprince@ofbelair.com\",\n  \"dt_criacao\": \"2017-01-01\"\n}]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>ID do usuário.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username do usuário.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha do usuário.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail do usuário.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dt_criacao",            "description": "<p>Data de criação (ISO 8601).</p>"          }        ]      }    },    "filename": "./sources/usuarios/usuarios.controller.js",    "groupTitle": "Usuario",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token gerado para o usuário.</p>"          }        ]      },      "examples": [        {          "title": "Token:",          "content": "{\n  \"token\": \"kfahfjasbebrvrsklvnsvndsjkvsvsv.faklfjejvbrkvbrsk\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "TokenNaoInformado",            "description": "<p>O token não foi informado no header da requisição.</p>"          }        ],        "Error 401": [          {            "group": "Error 401",            "optional": false,            "field": "TokenInvalido",            "description": "<p>O token informado na requisão é inválido.</p>"          }        ]      },      "examples": [        {          "title": "TokenNaoInformado:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"TokenNaoInformado\"\n}",          "type": "json"        },        {          "title": "TokenInvalido:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"TokenInvalido\"\n}",          "type": "json"        }      ]    }  }]
